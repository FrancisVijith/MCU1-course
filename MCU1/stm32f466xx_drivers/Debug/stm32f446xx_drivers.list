
stm32f446xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000414  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005d8  080005e0  000105e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005d8  080005d8  000105e0  2**0
                  CONTENTS
  4 .ARM          00000000  080005d8  080005d8  000105e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005d8  080005e0  000105e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005d8  080005d8  000105d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080005dc  080005dc  000105dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000105e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080005e0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080005e0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000105e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000080d  00000000  00000000  00010610  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000022a  00000000  00000000  00010e1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  00011048  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00011100  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000012fd  00000000  00000000  00011190  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000009eb  00000000  00000000  0001248d  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000050ce  00000000  00000000  00012e78  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00017f46  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  00017fc4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080005c0 	.word	0x080005c0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080005c0 	.word	0x080005c0

08000204 <delay>:
 */
#include"stm32f446xx.h"
#include"stm32f446xx_gpio_driver.h"

int delay(int x)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	for(int y=0; y <= x; y++);
 800020c:	2300      	movs	r3, #0
 800020e:	60fb      	str	r3, [r7, #12]
 8000210:	e002      	b.n	8000218 <delay+0x14>
 8000212:	68fb      	ldr	r3, [r7, #12]
 8000214:	3301      	adds	r3, #1
 8000216:	60fb      	str	r3, [r7, #12]
 8000218:	68fa      	ldr	r2, [r7, #12]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	429a      	cmp	r2, r3
 800021e:	ddf8      	ble.n	8000212 <delay+0xe>
}
 8000220:	bf00      	nop
 8000222:	4618      	mov	r0, r3
 8000224:	3714      	adds	r7, #20
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
	...

08000230 <main>:
int main(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	b084      	sub	sp, #16
 8000234:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOA;
 8000236:	4b0e      	ldr	r3, [pc, #56]	; (8000270 <main+0x40>)
 8000238:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800023a:	2305      	movs	r3, #5
 800023c:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023e:	2301      	movs	r3, #1
 8000240:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000242:	2302      	movs	r3, #2
 8000244:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000246:	2300      	movs	r3, #0
 8000248:	733b      	strb	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NOPUPD;
 800024a:	2300      	movs	r3, #0
 800024c:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClkCtrl(GPIOA,ENABLE);
 800024e:	2101      	movs	r1, #1
 8000250:	4807      	ldr	r0, [pc, #28]	; (8000270 <main+0x40>)
 8000252:	f000 f83b 	bl	80002cc <GPIO_PeriClkCtrl>
	GPIO_Init(&GpioLed);
 8000256:	1d3b      	adds	r3, r7, #4
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f8af 	bl	80003bc <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800025e:	2105      	movs	r1, #5
 8000260:	4803      	ldr	r0, [pc, #12]	; (8000270 <main+0x40>)
 8000262:	f000 f974 	bl	800054e <GPIO_ToggleOutputPin>
		delay(50000000);
 8000266:	4803      	ldr	r0, [pc, #12]	; (8000274 <main+0x44>)
 8000268:	f7ff ffcc 	bl	8000204 <delay>
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 800026c:	e7f7      	b.n	800025e <main+0x2e>
 800026e:	bf00      	nop
 8000270:	40020000 	.word	0x40020000
 8000274:	02faf080 	.word	0x02faf080

08000278 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000278:	480d      	ldr	r0, [pc, #52]	; (80002b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800027a:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800027c:	480d      	ldr	r0, [pc, #52]	; (80002b4 <LoopForever+0x6>)
  ldr r1, =_edata
 800027e:	490e      	ldr	r1, [pc, #56]	; (80002b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000280:	4a0e      	ldr	r2, [pc, #56]	; (80002bc <LoopForever+0xe>)
  movs r3, #0
 8000282:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000284:	e002      	b.n	800028c <LoopCopyDataInit>

08000286 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000286:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000288:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028a:	3304      	adds	r3, #4

0800028c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800028c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000290:	d3f9      	bcc.n	8000286 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000292:	4a0b      	ldr	r2, [pc, #44]	; (80002c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000294:	4c0b      	ldr	r4, [pc, #44]	; (80002c4 <LoopForever+0x16>)
  movs r3, #0
 8000296:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000298:	e001      	b.n	800029e <LoopFillZerobss>

0800029a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800029c:	3204      	adds	r2, #4

0800029e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a0:	d3fb      	bcc.n	800029a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002a2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002a6:	f000 f967 	bl	8000578 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002aa:	f7ff ffc1 	bl	8000230 <main>

080002ae <LoopForever>:

LoopForever:
    b LoopForever
 80002ae:	e7fe      	b.n	80002ae <LoopForever>
  ldr   r0, =_estack
 80002b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002bc:	080005e0 	.word	0x080005e0
  ldr r2, =_sbss
 80002c0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c4:	2000001c 	.word	0x2000001c

080002c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c8:	e7fe      	b.n	80002c8 <ADC_IRQHandler>
	...

080002cc <GPIO_PeriClkCtrl>:
 * @Note              -  none

 */

void GPIO_PeriClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 80002cc:	b480      	push	{r7}
 80002ce:	b083      	sub	sp, #12
 80002d0:	af00      	add	r7, sp, #0
 80002d2:	6078      	str	r0, [r7, #4]
 80002d4:	460b      	mov	r3, r1
 80002d6:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 80002d8:	78fb      	ldrb	r3, [r7, #3]
 80002da:	2b01      	cmp	r3, #1
 80002dc:	d156      	bne.n	800038c <GPIO_PeriClkCtrl+0xc0>
	{
		if(pGPIOx == GPIOA)
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	4a2d      	ldr	r2, [pc, #180]	; (8000398 <GPIO_PeriClkCtrl+0xcc>)
 80002e2:	4293      	cmp	r3, r2
 80002e4:	d106      	bne.n	80002f4 <GPIO_PeriClkCtrl+0x28>
				{
				GPIOA_PCLK_EN();
 80002e6:	4b2d      	ldr	r3, [pc, #180]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 80002e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ea:	4a2c      	ldr	r2, [pc, #176]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 80002ec:	f043 0301 	orr.w	r3, r3, #1
 80002f0:	6313      	str	r3, [r2, #48]	; 0x30
		//todo
	}



}
 80002f2:	e04b      	b.n	800038c <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOB)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	4a2a      	ldr	r2, [pc, #168]	; (80003a0 <GPIO_PeriClkCtrl+0xd4>)
 80002f8:	4293      	cmp	r3, r2
 80002fa:	d106      	bne.n	800030a <GPIO_PeriClkCtrl+0x3e>
				GPIOB_PCLK_EN();
 80002fc:	4b27      	ldr	r3, [pc, #156]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 80002fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000300:	4a26      	ldr	r2, [pc, #152]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000302:	f043 0302 	orr.w	r3, r3, #2
 8000306:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000308:	e040      	b.n	800038c <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOC)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	4a25      	ldr	r2, [pc, #148]	; (80003a4 <GPIO_PeriClkCtrl+0xd8>)
 800030e:	4293      	cmp	r3, r2
 8000310:	d106      	bne.n	8000320 <GPIO_PeriClkCtrl+0x54>
				GPIOC_PCLK_EN();
 8000312:	4b22      	ldr	r3, [pc, #136]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000316:	4a21      	ldr	r2, [pc, #132]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000318:	f043 0304 	orr.w	r3, r3, #4
 800031c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800031e:	e035      	b.n	800038c <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOD)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	4a21      	ldr	r2, [pc, #132]	; (80003a8 <GPIO_PeriClkCtrl+0xdc>)
 8000324:	4293      	cmp	r3, r2
 8000326:	d106      	bne.n	8000336 <GPIO_PeriClkCtrl+0x6a>
				GPIOD_PCLK_EN();
 8000328:	4b1c      	ldr	r3, [pc, #112]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 800032a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800032c:	4a1b      	ldr	r2, [pc, #108]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 800032e:	f043 0308 	orr.w	r3, r3, #8
 8000332:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000334:	e02a      	b.n	800038c <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOE)
 8000336:	687b      	ldr	r3, [r7, #4]
 8000338:	4a1c      	ldr	r2, [pc, #112]	; (80003ac <GPIO_PeriClkCtrl+0xe0>)
 800033a:	4293      	cmp	r3, r2
 800033c:	d106      	bne.n	800034c <GPIO_PeriClkCtrl+0x80>
				GPIOE_PCLK_EN();
 800033e:	4b17      	ldr	r3, [pc, #92]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000342:	4a16      	ldr	r2, [pc, #88]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000344:	f043 0310 	orr.w	r3, r3, #16
 8000348:	6313      	str	r3, [r2, #48]	; 0x30
}
 800034a:	e01f      	b.n	800038c <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOF)
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	4a18      	ldr	r2, [pc, #96]	; (80003b0 <GPIO_PeriClkCtrl+0xe4>)
 8000350:	4293      	cmp	r3, r2
 8000352:	d106      	bne.n	8000362 <GPIO_PeriClkCtrl+0x96>
				GPIOF_PCLK_EN();
 8000354:	4b11      	ldr	r3, [pc, #68]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000356:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000358:	4a10      	ldr	r2, [pc, #64]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 800035a:	f043 0320 	orr.w	r3, r3, #32
 800035e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000360:	e014      	b.n	800038c <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOG)
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	4a13      	ldr	r2, [pc, #76]	; (80003b4 <GPIO_PeriClkCtrl+0xe8>)
 8000366:	4293      	cmp	r3, r2
 8000368:	d106      	bne.n	8000378 <GPIO_PeriClkCtrl+0xac>
				GPIOG_PCLK_EN();
 800036a:	4b0c      	ldr	r3, [pc, #48]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 800036c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036e:	4a0b      	ldr	r2, [pc, #44]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000370:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000374:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000376:	e009      	b.n	800038c <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOH)
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	4a0f      	ldr	r2, [pc, #60]	; (80003b8 <GPIO_PeriClkCtrl+0xec>)
 800037c:	4293      	cmp	r3, r2
 800037e:	d105      	bne.n	800038c <GPIO_PeriClkCtrl+0xc0>
				GPIOH_PCLK_EN();
 8000380:	4b06      	ldr	r3, [pc, #24]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000384:	4a05      	ldr	r2, [pc, #20]	; (800039c <GPIO_PeriClkCtrl+0xd0>)
 8000386:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800038a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800038c:	bf00      	nop
 800038e:	370c      	adds	r7, #12
 8000390:	46bd      	mov	sp, r7
 8000392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000396:	4770      	bx	lr
 8000398:	40020000 	.word	0x40020000
 800039c:	40023800 	.word	0x40023800
 80003a0:	40020400 	.word	0x40020400
 80003a4:	40020800 	.word	0x40020800
 80003a8:	40020c00 	.word	0x40020c00
 80003ac:	40021000 	.word	0x40021000
 80003b0:	40021400 	.word	0x40021400
 80003b4:	40021800 	.word	0x40021800
 80003b8:	40021c00 	.word	0x40021c00

080003bc <GPIO_Init>:
 *
 * @Note              -  none

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003bc:	b480      	push	{r7}
 80003be:	b085      	sub	sp, #20
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80003c4:	2300      	movs	r3, #0
 80003c6:	60fb      	str	r3, [r7, #12]
	//1. configure the mode of the gpio pin
	if ( pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	795b      	ldrb	r3, [r3, #5]
 80003cc:	2b03      	cmp	r3, #3
 80003ce:	d81e      	bhi.n	800040e <GPIO_Init+0x52>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << ( 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	795b      	ldrb	r3, [r3, #5]
 80003d4:	461a      	mov	r2, r3
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	791b      	ldrb	r3, [r3, #4]
 80003da:	005b      	lsls	r3, r3, #1
 80003dc:	fa02 f303 	lsl.w	r3, r2, r3
 80003e0:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	681a      	ldr	r2, [r3, #0]
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	791b      	ldrb	r3, [r3, #4]
 80003ec:	4619      	mov	r1, r3
 80003ee:	2303      	movs	r3, #3
 80003f0:	408b      	lsls	r3, r1
 80003f2:	43db      	mvns	r3, r3
 80003f4:	4619      	mov	r1, r3
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	400a      	ands	r2, r1
 80003fc:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	6819      	ldr	r1, [r3, #0]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	68fa      	ldr	r2, [r7, #12]
 800040a:	430a      	orrs	r2, r1
 800040c:	601a      	str	r2, [r3, #0]
	}
	else
	{
		//todo
	}
	temp = 0;
 800040e:	2300      	movs	r3, #0
 8000410:	60fb      	str	r3, [r7, #12]
	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	799b      	ldrb	r3, [r3, #6]
 8000416:	461a      	mov	r2, r3
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	791b      	ldrb	r3, [r3, #4]
 800041c:	005b      	lsls	r3, r3, #1
 800041e:	fa02 f303 	lsl.w	r3, r2, r3
 8000422:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	689a      	ldr	r2, [r3, #8]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	791b      	ldrb	r3, [r3, #4]
 800042e:	4619      	mov	r1, r3
 8000430:	2303      	movs	r3, #3
 8000432:	408b      	lsls	r3, r1
 8000434:	43db      	mvns	r3, r3
 8000436:	4619      	mov	r1, r3
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	400a      	ands	r2, r1
 800043e:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	6899      	ldr	r1, [r3, #8]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	68fa      	ldr	r2, [r7, #12]
 800044c:	430a      	orrs	r2, r1
 800044e:	609a      	str	r2, [r3, #8]
	//3. configure the pupd settings
	temp = 0;
 8000450:	2300      	movs	r3, #0
 8000452:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	79db      	ldrb	r3, [r3, #7]
 8000458:	461a      	mov	r2, r3
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	791b      	ldrb	r3, [r3, #4]
 800045e:	005b      	lsls	r3, r3, #1
 8000460:	fa02 f303 	lsl.w	r3, r2, r3
 8000464:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	68da      	ldr	r2, [r3, #12]
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	4619      	mov	r1, r3
 8000472:	2303      	movs	r3, #3
 8000474:	408b      	lsls	r3, r1
 8000476:	43db      	mvns	r3, r3
 8000478:	4619      	mov	r1, r3
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	400a      	ands	r2, r1
 8000480:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	68d9      	ldr	r1, [r3, #12]
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	68fa      	ldr	r2, [r7, #12]
 800048e:	430a      	orrs	r2, r1
 8000490:	60da      	str	r2, [r3, #12]
	temp =0;
 8000492:	2300      	movs	r3, #0
 8000494:	60fb      	str	r3, [r7, #12]
	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	7a1b      	ldrb	r3, [r3, #8]
 800049a:	461a      	mov	r2, r3
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	791b      	ldrb	r3, [r3, #4]
 80004a0:	fa02 f303 	lsl.w	r3, r2, r3
 80004a4:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	685a      	ldr	r2, [r3, #4]
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	791b      	ldrb	r3, [r3, #4]
 80004b0:	4619      	mov	r1, r3
 80004b2:	2303      	movs	r3, #3
 80004b4:	408b      	lsls	r3, r1
 80004b6:	43db      	mvns	r3, r3
 80004b8:	4619      	mov	r1, r3
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	400a      	ands	r2, r1
 80004c0:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	6859      	ldr	r1, [r3, #4]
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	68fa      	ldr	r2, [r7, #12]
 80004ce:	430a      	orrs	r2, r1
 80004d0:	605a      	str	r2, [r3, #4]
	temp = 0;
 80004d2:	2300      	movs	r3, #0
 80004d4:	60fb      	str	r3, [r7, #12]

	//5. configure the alt functnlty
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80004d6:	687b      	ldr	r3, [r7, #4]
 80004d8:	795b      	ldrb	r3, [r3, #5]
 80004da:	2b02      	cmp	r3, #2
 80004dc:	d131      	bne.n	8000542 <GPIO_Init+0x186>
		{
			uint8_t temp1,temp2;
			temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	791b      	ldrb	r3, [r3, #4]
 80004e2:	08db      	lsrs	r3, r3, #3
 80004e4:	72fb      	strb	r3, [r7, #11]
			temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	791b      	ldrb	r3, [r3, #4]
 80004ea:	f003 0307 	and.w	r3, r3, #7
 80004ee:	72bb      	strb	r3, [r7, #10]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2) );
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	7afa      	ldrb	r2, [r7, #11]
 80004f6:	3208      	adds	r2, #8
 80004f8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004fc:	7abb      	ldrb	r3, [r7, #10]
 80004fe:	009b      	lsls	r3, r3, #2
 8000500:	220f      	movs	r2, #15
 8000502:	fa02 f303 	lsl.w	r3, r2, r3
 8000506:	43db      	mvns	r3, r3
 8000508:	4618      	mov	r0, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	7afa      	ldrb	r2, [r7, #11]
 8000510:	4001      	ands	r1, r0
 8000512:	3208      	adds	r2, #8
 8000514:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFinMode << (4*temp2));
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	7afa      	ldrb	r2, [r7, #11]
 800051e:	3208      	adds	r2, #8
 8000520:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	7a5b      	ldrb	r3, [r3, #9]
 8000528:	461a      	mov	r2, r3
 800052a:	7abb      	ldrb	r3, [r7, #10]
 800052c:	009b      	lsls	r3, r3, #2
 800052e:	fa02 f303 	lsl.w	r3, r2, r3
 8000532:	4618      	mov	r0, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	7afa      	ldrb	r2, [r7, #11]
 800053a:	4301      	orrs	r1, r0
 800053c:	3208      	adds	r2, #8
 800053e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}

}
 8000542:	bf00      	nop
 8000544:	3714      	adds	r7, #20
 8000546:	46bd      	mov	sp, r7
 8000548:	f85d 7b04 	ldr.w	r7, [sp], #4
 800054c:	4770      	bx	lr

0800054e <GPIO_ToggleOutputPin>:
 * @Note              -  none

 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800054e:	b480      	push	{r7}
 8000550:	b083      	sub	sp, #12
 8000552:	af00      	add	r7, sp, #0
 8000554:	6078      	str	r0, [r7, #4]
 8000556:	460b      	mov	r3, r1
 8000558:	70fb      	strb	r3, [r7, #3]
pGPIOx->ODR = pGPIOx->ODR^(1<<PinNumber);
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	695b      	ldr	r3, [r3, #20]
 800055e:	78fa      	ldrb	r2, [r7, #3]
 8000560:	2101      	movs	r1, #1
 8000562:	fa01 f202 	lsl.w	r2, r1, r2
 8000566:	405a      	eors	r2, r3
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	615a      	str	r2, [r3, #20]
}
 800056c:	bf00      	nop
 800056e:	370c      	adds	r7, #12
 8000570:	46bd      	mov	sp, r7
 8000572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000576:	4770      	bx	lr

08000578 <__libc_init_array>:
 8000578:	b570      	push	{r4, r5, r6, lr}
 800057a:	4e0d      	ldr	r6, [pc, #52]	; (80005b0 <__libc_init_array+0x38>)
 800057c:	4c0d      	ldr	r4, [pc, #52]	; (80005b4 <__libc_init_array+0x3c>)
 800057e:	1ba4      	subs	r4, r4, r6
 8000580:	10a4      	asrs	r4, r4, #2
 8000582:	2500      	movs	r5, #0
 8000584:	42a5      	cmp	r5, r4
 8000586:	d109      	bne.n	800059c <__libc_init_array+0x24>
 8000588:	4e0b      	ldr	r6, [pc, #44]	; (80005b8 <__libc_init_array+0x40>)
 800058a:	4c0c      	ldr	r4, [pc, #48]	; (80005bc <__libc_init_array+0x44>)
 800058c:	f000 f818 	bl	80005c0 <_init>
 8000590:	1ba4      	subs	r4, r4, r6
 8000592:	10a4      	asrs	r4, r4, #2
 8000594:	2500      	movs	r5, #0
 8000596:	42a5      	cmp	r5, r4
 8000598:	d105      	bne.n	80005a6 <__libc_init_array+0x2e>
 800059a:	bd70      	pop	{r4, r5, r6, pc}
 800059c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005a0:	4798      	blx	r3
 80005a2:	3501      	adds	r5, #1
 80005a4:	e7ee      	b.n	8000584 <__libc_init_array+0xc>
 80005a6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005aa:	4798      	blx	r3
 80005ac:	3501      	adds	r5, #1
 80005ae:	e7f2      	b.n	8000596 <__libc_init_array+0x1e>
 80005b0:	080005d8 	.word	0x080005d8
 80005b4:	080005d8 	.word	0x080005d8
 80005b8:	080005d8 	.word	0x080005d8
 80005bc:	080005dc 	.word	0x080005dc

080005c0 <_init>:
 80005c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005c2:	bf00      	nop
 80005c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005c6:	bc08      	pop	{r3}
 80005c8:	469e      	mov	lr, r3
 80005ca:	4770      	bx	lr

080005cc <_fini>:
 80005cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005ce:	bf00      	nop
 80005d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005d2:	bc08      	pop	{r3}
 80005d4:	469e      	mov	lr, r3
 80005d6:	4770      	bx	lr

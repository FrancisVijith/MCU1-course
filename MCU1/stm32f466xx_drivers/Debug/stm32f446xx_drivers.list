
stm32f446xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000060c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080007d0  080007d8  000107d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080007d0  080007d0  000107d8  2**0
                  CONTENTS
  4 .ARM          00000000  080007d0  080007d0  000107d8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080007d0  080007d8  000107d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080007d0  080007d0  000107d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080007d4  080007d4  000107d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000107d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080007d8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080007d8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000107d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000930  00000000  00000000  00010808  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000244  00000000  00000000  00011138  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000b8  00000000  00000000  00011380  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000090  00000000  00000000  00011438  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000131b  00000000  00000000  000114c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000a5a  00000000  00000000  000127e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000523a  00000000  00000000  0001323d  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018477  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000224  00000000  00000000  000184f4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080007b8 	.word	0x080007b8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080007b8 	.word	0x080007b8

08000204 <delay>:
 */
#include"stm32f446xx.h"
#include"stm32f446xx_gpio_driver.h"

int delay(int x)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < x ; i++);
 800020c:	2300      	movs	r3, #0
 800020e:	60fb      	str	r3, [r7, #12]
 8000210:	e002      	b.n	8000218 <delay+0x14>
 8000212:	68fb      	ldr	r3, [r7, #12]
 8000214:	3301      	adds	r3, #1
 8000216:	60fb      	str	r3, [r7, #12]
 8000218:	68fa      	ldr	r2, [r7, #12]
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	429a      	cmp	r2, r3
 800021e:	dbf8      	blt.n	8000212 <delay+0xe>
}
 8000220:	bf00      	nop
 8000222:	4618      	mov	r0, r3
 8000224:	3714      	adds	r7, #20
 8000226:	46bd      	mov	sp, r7
 8000228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800022c:	4770      	bx	lr
	...

08000230 <main>:
int main(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	b086      	sub	sp, #24
 8000234:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed,GpioBtn;

	GpioLed.pGPIOx = GPIOA;
 8000236:	4b1b      	ldr	r3, [pc, #108]	; (80002a4 <main+0x74>)
 8000238:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 800023a:	2305      	movs	r3, #5
 800023c:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800023e:	2301      	movs	r3, #1
 8000240:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000242:	2302      	movs	r3, #2
 8000244:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000246:	2300      	movs	r3, #0
 8000248:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NOPUPD;
 800024a:	2300      	movs	r3, #0
 800024c:	74fb      	strb	r3, [r7, #19]

	GPIO_PeriClkCtrl(GPIOA,ENABLE);
 800024e:	2101      	movs	r1, #1
 8000250:	4814      	ldr	r0, [pc, #80]	; (80002a4 <main+0x74>)
 8000252:	f000 f857 	bl	8000304 <GPIO_PeriClkCtrl>
	GPIO_Init(&GpioLed);
 8000256:	f107 030c 	add.w	r3, r7, #12
 800025a:	4618      	mov	r0, r3
 800025c:	f000 f8ca 	bl	80003f4 <GPIO_Init>
	//gpio button
		GpioBtn.pGPIOx = GPIOC;
 8000260:	4b11      	ldr	r3, [pc, #68]	; (80002a8 <main+0x78>)
 8000262:	603b      	str	r3, [r7, #0]
		GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000264:	230d      	movs	r3, #13
 8000266:	713b      	strb	r3, [r7, #4]
		GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 8000268:	2300      	movs	r3, #0
 800026a:	717b      	strb	r3, [r7, #5]
		GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800026c:	2302      	movs	r3, #2
 800026e:	71bb      	strb	r3, [r7, #6]
		GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NOPUPD;
 8000270:	2300      	movs	r3, #0
 8000272:	71fb      	strb	r3, [r7, #7]

		GPIO_PeriClkCtrl(GPIOC,ENABLE);
 8000274:	2101      	movs	r1, #1
 8000276:	480c      	ldr	r0, [pc, #48]	; (80002a8 <main+0x78>)
 8000278:	f000 f844 	bl	8000304 <GPIO_PeriClkCtrl>
		GPIO_Init(&GpioBtn);
 800027c:	463b      	mov	r3, r7
 800027e:	4618      	mov	r0, r3
 8000280:	f000 f8b8 	bl	80003f4 <GPIO_Init>


	while(1)
	{if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)==0)
 8000284:	210d      	movs	r1, #13
 8000286:	4808      	ldr	r0, [pc, #32]	; (80002a8 <main+0x78>)
 8000288:	f000 fa46 	bl	8000718 <GPIO_ReadFromInputPin>
 800028c:	4603      	mov	r3, r0
 800028e:	2b00      	cmp	r3, #0
 8000290:	d1f8      	bne.n	8000284 <main+0x54>
		{delay(500000);
 8000292:	4806      	ldr	r0, [pc, #24]	; (80002ac <main+0x7c>)
 8000294:	f7ff ffb6 	bl	8000204 <delay>
		//GPIO_WriteToOutputPin(GPIOA, GPIO_PIN_NO_5, 1);
		GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);
 8000298:	2105      	movs	r1, #5
 800029a:	4802      	ldr	r0, [pc, #8]	; (80002a4 <main+0x74>)
 800029c:	f000 fa52 	bl	8000744 <GPIO_ToggleOutputPin>
	{if(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13)==0)
 80002a0:	e7f0      	b.n	8000284 <main+0x54>
 80002a2:	bf00      	nop
 80002a4:	40020000 	.word	0x40020000
 80002a8:	40020800 	.word	0x40020800
 80002ac:	0007a120 	.word	0x0007a120

080002b0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002b0:	480d      	ldr	r0, [pc, #52]	; (80002e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002b2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480d      	ldr	r0, [pc, #52]	; (80002ec <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490e      	ldr	r1, [pc, #56]	; (80002f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0e      	ldr	r2, [pc, #56]	; (80002f4 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0b      	ldr	r2, [pc, #44]	; (80002f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0b      	ldr	r4, [pc, #44]	; (80002fc <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002da:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80002de:	f000 fa47 	bl	8000770 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002e2:	f7ff ffa5 	bl	8000230 <main>

080002e6 <LoopForever>:

LoopForever:
    b LoopForever
 80002e6:	e7fe      	b.n	80002e6 <LoopForever>
  ldr   r0, =_estack
 80002e8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002f0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f4:	080007d8 	.word	0x080007d8
  ldr r2, =_sbss
 80002f8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002fc:	2000001c 	.word	0x2000001c

08000300 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000300:	e7fe      	b.n	8000300 <ADC_IRQHandler>
	...

08000304 <GPIO_PeriClkCtrl>:
 * @Note              -  none

 */

void GPIO_PeriClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 8000304:	b480      	push	{r7}
 8000306:	b083      	sub	sp, #12
 8000308:	af00      	add	r7, sp, #0
 800030a:	6078      	str	r0, [r7, #4]
 800030c:	460b      	mov	r3, r1
 800030e:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000310:	78fb      	ldrb	r3, [r7, #3]
 8000312:	2b01      	cmp	r3, #1
 8000314:	d156      	bne.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
	{
		if(pGPIOx == GPIOA)
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a2d      	ldr	r2, [pc, #180]	; (80003d0 <GPIO_PeriClkCtrl+0xcc>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <GPIO_PeriClkCtrl+0x28>
				{
				GPIOA_PCLK_EN();
 800031e:	4b2d      	ldr	r3, [pc, #180]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000322:	4a2c      	ldr	r2, [pc, #176]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000324:	f043 0301 	orr.w	r3, r3, #1
 8000328:	6313      	str	r3, [r2, #48]	; 0x30
		//todo
	}



}
 800032a:	e04b      	b.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOB)
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a2a      	ldr	r2, [pc, #168]	; (80003d8 <GPIO_PeriClkCtrl+0xd4>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <GPIO_PeriClkCtrl+0x3e>
				GPIOB_PCLK_EN();
 8000334:	4b27      	ldr	r3, [pc, #156]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000338:	4a26      	ldr	r2, [pc, #152]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 800033a:	f043 0302 	orr.w	r3, r3, #2
 800033e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000340:	e040      	b.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOC)
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a25      	ldr	r2, [pc, #148]	; (80003dc <GPIO_PeriClkCtrl+0xd8>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <GPIO_PeriClkCtrl+0x54>
				GPIOC_PCLK_EN();
 800034a:	4b22      	ldr	r3, [pc, #136]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 800034c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034e:	4a21      	ldr	r2, [pc, #132]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000350:	f043 0304 	orr.w	r3, r3, #4
 8000354:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000356:	e035      	b.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOD)
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a21      	ldr	r2, [pc, #132]	; (80003e0 <GPIO_PeriClkCtrl+0xdc>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d106      	bne.n	800036e <GPIO_PeriClkCtrl+0x6a>
				GPIOD_PCLK_EN();
 8000360:	4b1c      	ldr	r3, [pc, #112]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000364:	4a1b      	ldr	r2, [pc, #108]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000366:	f043 0308 	orr.w	r3, r3, #8
 800036a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036c:	e02a      	b.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOE)
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	4a1c      	ldr	r2, [pc, #112]	; (80003e4 <GPIO_PeriClkCtrl+0xe0>)
 8000372:	4293      	cmp	r3, r2
 8000374:	d106      	bne.n	8000384 <GPIO_PeriClkCtrl+0x80>
				GPIOE_PCLK_EN();
 8000376:	4b17      	ldr	r3, [pc, #92]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037a:	4a16      	ldr	r2, [pc, #88]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 800037c:	f043 0310 	orr.w	r3, r3, #16
 8000380:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000382:	e01f      	b.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOF)
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	4a18      	ldr	r2, [pc, #96]	; (80003e8 <GPIO_PeriClkCtrl+0xe4>)
 8000388:	4293      	cmp	r3, r2
 800038a:	d106      	bne.n	800039a <GPIO_PeriClkCtrl+0x96>
				GPIOF_PCLK_EN();
 800038c:	4b11      	ldr	r3, [pc, #68]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 800038e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000390:	4a10      	ldr	r2, [pc, #64]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 8000392:	f043 0320 	orr.w	r3, r3, #32
 8000396:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000398:	e014      	b.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOG)
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	4a13      	ldr	r2, [pc, #76]	; (80003ec <GPIO_PeriClkCtrl+0xe8>)
 800039e:	4293      	cmp	r3, r2
 80003a0:	d106      	bne.n	80003b0 <GPIO_PeriClkCtrl+0xac>
				GPIOG_PCLK_EN();
 80003a2:	4b0c      	ldr	r3, [pc, #48]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 80003a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a6:	4a0b      	ldr	r2, [pc, #44]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 80003a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003ac:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ae:	e009      	b.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
		else if(pGPIOx == GPIOH)
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	4a0f      	ldr	r2, [pc, #60]	; (80003f0 <GPIO_PeriClkCtrl+0xec>)
 80003b4:	4293      	cmp	r3, r2
 80003b6:	d105      	bne.n	80003c4 <GPIO_PeriClkCtrl+0xc0>
				GPIOH_PCLK_EN();
 80003b8:	4b06      	ldr	r3, [pc, #24]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 80003ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003bc:	4a05      	ldr	r2, [pc, #20]	; (80003d4 <GPIO_PeriClkCtrl+0xd0>)
 80003be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c4:	bf00      	nop
 80003c6:	370c      	adds	r7, #12
 80003c8:	46bd      	mov	sp, r7
 80003ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ce:	4770      	bx	lr
 80003d0:	40020000 	.word	0x40020000
 80003d4:	40023800 	.word	0x40023800
 80003d8:	40020400 	.word	0x40020400
 80003dc:	40020800 	.word	0x40020800
 80003e0:	40020c00 	.word	0x40020c00
 80003e4:	40021000 	.word	0x40021000
 80003e8:	40021400 	.word	0x40021400
 80003ec:	40021800 	.word	0x40021800
 80003f0:	40021c00 	.word	0x40021c00

080003f4 <GPIO_Init>:
 *
 * @Note              -  none

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003f4:	b480      	push	{r7}
 80003f6:	b087      	sub	sp, #28
 80003f8:	af00      	add	r7, sp, #0
 80003fa:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80003fc:	2300      	movs	r3, #0
 80003fe:	617b      	str	r3, [r7, #20]
	//1. configure the mode of the gpio pin
	if ( pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	795b      	ldrb	r3, [r3, #5]
 8000404:	2b03      	cmp	r3, #3
 8000406:	d81f      	bhi.n	8000448 <GPIO_Init+0x54>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << ( 2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	795b      	ldrb	r3, [r3, #5]
 800040c:	461a      	mov	r2, r3
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	791b      	ldrb	r3, [r3, #4]
 8000412:	005b      	lsls	r3, r3, #1
 8000414:	fa02 f303 	lsl.w	r3, r2, r3
 8000418:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	681a      	ldr	r2, [r3, #0]
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	791b      	ldrb	r3, [r3, #4]
 8000424:	4619      	mov	r1, r3
 8000426:	2303      	movs	r3, #3
 8000428:	408b      	lsls	r3, r1
 800042a:	43db      	mvns	r3, r3
 800042c:	4619      	mov	r1, r3
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	681b      	ldr	r3, [r3, #0]
 8000432:	400a      	ands	r2, r1
 8000434:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	6819      	ldr	r1, [r3, #0]
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	697a      	ldr	r2, [r7, #20]
 8000442:	430a      	orrs	r2, r1
 8000444:	601a      	str	r2, [r3, #0]
 8000446:	e0c1      	b.n	80005cc <GPIO_Init+0x1d8>

	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	795b      	ldrb	r3, [r3, #5]
 800044c:	2b04      	cmp	r3, #4
 800044e:	d816      	bhi.n	800047e <GPIO_Init+0x8a>
			{
			//1.configure FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000450:	4b46      	ldr	r3, [pc, #280]	; (800056c <GPIO_Init+0x178>)
 8000452:	68db      	ldr	r3, [r3, #12]
 8000454:	687a      	ldr	r2, [r7, #4]
 8000456:	7912      	ldrb	r2, [r2, #4]
 8000458:	4611      	mov	r1, r2
 800045a:	2201      	movs	r2, #1
 800045c:	408a      	lsls	r2, r1
 800045e:	4611      	mov	r1, r2
 8000460:	4a42      	ldr	r2, [pc, #264]	; (800056c <GPIO_Init+0x178>)
 8000462:	430b      	orrs	r3, r1
 8000464:	60d3      	str	r3, [r2, #12]
			//clear RTSR
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000466:	4b41      	ldr	r3, [pc, #260]	; (800056c <GPIO_Init+0x178>)
 8000468:	689b      	ldr	r3, [r3, #8]
 800046a:	687a      	ldr	r2, [r7, #4]
 800046c:	7912      	ldrb	r2, [r2, #4]
 800046e:	4611      	mov	r1, r2
 8000470:	2201      	movs	r2, #1
 8000472:	408a      	lsls	r2, r1
 8000474:	43d2      	mvns	r2, r2
 8000476:	4611      	mov	r1, r2
 8000478:	4a3c      	ldr	r2, [pc, #240]	; (800056c <GPIO_Init+0x178>)
 800047a:	400b      	ands	r3, r1
 800047c:	6093      	str	r3, [r2, #8]
			}
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT)
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	795b      	ldrb	r3, [r3, #5]
 8000482:	2b05      	cmp	r3, #5
 8000484:	d816      	bhi.n	80004b4 <GPIO_Init+0xc0>
			{
			//1.configure RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000486:	4b39      	ldr	r3, [pc, #228]	; (800056c <GPIO_Init+0x178>)
 8000488:	689b      	ldr	r3, [r3, #8]
 800048a:	687a      	ldr	r2, [r7, #4]
 800048c:	7912      	ldrb	r2, [r2, #4]
 800048e:	4611      	mov	r1, r2
 8000490:	2201      	movs	r2, #1
 8000492:	408a      	lsls	r2, r1
 8000494:	4611      	mov	r1, r2
 8000496:	4a35      	ldr	r2, [pc, #212]	; (800056c <GPIO_Init+0x178>)
 8000498:	430b      	orrs	r3, r1
 800049a:	6093      	str	r3, [r2, #8]
			//clear FTSR
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800049c:	4b33      	ldr	r3, [pc, #204]	; (800056c <GPIO_Init+0x178>)
 800049e:	68db      	ldr	r3, [r3, #12]
 80004a0:	687a      	ldr	r2, [r7, #4]
 80004a2:	7912      	ldrb	r2, [r2, #4]
 80004a4:	4611      	mov	r1, r2
 80004a6:	2201      	movs	r2, #1
 80004a8:	408a      	lsls	r2, r1
 80004aa:	43d2      	mvns	r2, r2
 80004ac:	4611      	mov	r1, r2
 80004ae:	4a2f      	ldr	r2, [pc, #188]	; (800056c <GPIO_Init+0x178>)
 80004b0:	400b      	ands	r3, r1
 80004b2:	60d3      	str	r3, [r2, #12]
			}
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT)
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	795b      	ldrb	r3, [r3, #5]
 80004b8:	2b06      	cmp	r3, #6
 80004ba:	d816      	bhi.n	80004ea <GPIO_Init+0xf6>
				{
			//1.configure both FTSR and RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004bc:	4b2b      	ldr	r3, [pc, #172]	; (800056c <GPIO_Init+0x178>)
 80004be:	689b      	ldr	r3, [r3, #8]
 80004c0:	687a      	ldr	r2, [r7, #4]
 80004c2:	7912      	ldrb	r2, [r2, #4]
 80004c4:	4611      	mov	r1, r2
 80004c6:	2201      	movs	r2, #1
 80004c8:	408a      	lsls	r2, r1
 80004ca:	4611      	mov	r1, r2
 80004cc:	4a27      	ldr	r2, [pc, #156]	; (800056c <GPIO_Init+0x178>)
 80004ce:	430b      	orrs	r3, r1
 80004d0:	6093      	str	r3, [r2, #8]

			EXTI->FTSR |= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004d2:	4b26      	ldr	r3, [pc, #152]	; (800056c <GPIO_Init+0x178>)
 80004d4:	68db      	ldr	r3, [r3, #12]
 80004d6:	687a      	ldr	r2, [r7, #4]
 80004d8:	7912      	ldrb	r2, [r2, #4]
 80004da:	4611      	mov	r1, r2
 80004dc:	2201      	movs	r2, #1
 80004de:	408a      	lsls	r2, r1
 80004e0:	43d2      	mvns	r2, r2
 80004e2:	4611      	mov	r1, r2
 80004e4:	4a21      	ldr	r2, [pc, #132]	; (800056c <GPIO_Init+0x178>)
 80004e6:	430b      	orrs	r3, r1
 80004e8:	60d3      	str	r3, [r2, #12]
				}
		//2.configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	089b      	lsrs	r3, r3, #2
 80004f0:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	791b      	ldrb	r3, [r3, #4]
 80004f6:	f003 0303 	and.w	r3, r3, #3
 80004fa:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	4a1b      	ldr	r2, [pc, #108]	; (8000570 <GPIO_Init+0x17c>)
 8000502:	4293      	cmp	r3, r2
 8000504:	d044      	beq.n	8000590 <GPIO_Init+0x19c>
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	4a1a      	ldr	r2, [pc, #104]	; (8000574 <GPIO_Init+0x180>)
 800050c:	4293      	cmp	r3, r2
 800050e:	d02b      	beq.n	8000568 <GPIO_Init+0x174>
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	4a18      	ldr	r2, [pc, #96]	; (8000578 <GPIO_Init+0x184>)
 8000516:	4293      	cmp	r3, r2
 8000518:	d024      	beq.n	8000564 <GPIO_Init+0x170>
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	4a17      	ldr	r2, [pc, #92]	; (800057c <GPIO_Init+0x188>)
 8000520:	4293      	cmp	r3, r2
 8000522:	d01d      	beq.n	8000560 <GPIO_Init+0x16c>
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	4a15      	ldr	r2, [pc, #84]	; (8000580 <GPIO_Init+0x18c>)
 800052a:	4293      	cmp	r3, r2
 800052c:	d016      	beq.n	800055c <GPIO_Init+0x168>
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	4a14      	ldr	r2, [pc, #80]	; (8000584 <GPIO_Init+0x190>)
 8000534:	4293      	cmp	r3, r2
 8000536:	d00f      	beq.n	8000558 <GPIO_Init+0x164>
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	4a12      	ldr	r2, [pc, #72]	; (8000588 <GPIO_Init+0x194>)
 800053e:	4293      	cmp	r3, r2
 8000540:	d008      	beq.n	8000554 <GPIO_Init+0x160>
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	4a11      	ldr	r2, [pc, #68]	; (800058c <GPIO_Init+0x198>)
 8000548:	4293      	cmp	r3, r2
 800054a:	d101      	bne.n	8000550 <GPIO_Init+0x15c>
 800054c:	2307      	movs	r3, #7
 800054e:	e020      	b.n	8000592 <GPIO_Init+0x19e>
 8000550:	2300      	movs	r3, #0
 8000552:	e01e      	b.n	8000592 <GPIO_Init+0x19e>
 8000554:	2306      	movs	r3, #6
 8000556:	e01c      	b.n	8000592 <GPIO_Init+0x19e>
 8000558:	2305      	movs	r3, #5
 800055a:	e01a      	b.n	8000592 <GPIO_Init+0x19e>
 800055c:	2304      	movs	r3, #4
 800055e:	e018      	b.n	8000592 <GPIO_Init+0x19e>
 8000560:	2303      	movs	r3, #3
 8000562:	e016      	b.n	8000592 <GPIO_Init+0x19e>
 8000564:	2302      	movs	r3, #2
 8000566:	e014      	b.n	8000592 <GPIO_Init+0x19e>
 8000568:	2301      	movs	r3, #1
 800056a:	e012      	b.n	8000592 <GPIO_Init+0x19e>
 800056c:	40013c00 	.word	0x40013c00
 8000570:	40020000 	.word	0x40020000
 8000574:	40020400 	.word	0x40020400
 8000578:	40020800 	.word	0x40020800
 800057c:	40020c00 	.word	0x40020c00
 8000580:	40021000 	.word	0x40021000
 8000584:	40021400 	.word	0x40021400
 8000588:	40021800 	.word	0x40021800
 800058c:	40021c00 	.word	0x40021c00
 8000590:	2300      	movs	r3, #0
 8000592:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8000594:	4b5d      	ldr	r3, [pc, #372]	; (800070c <GPIO_Init+0x318>)
 8000596:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000598:	4a5c      	ldr	r2, [pc, #368]	; (800070c <GPIO_Init+0x318>)
 800059a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800059e:	6413      	str	r3, [r2, #64]	; 0x40
		SYSCFG->EXTICR[temp1] = portcode << ( temp2*4 );
 80005a0:	7c7a      	ldrb	r2, [r7, #17]
 80005a2:	7cbb      	ldrb	r3, [r7, #18]
 80005a4:	009b      	lsls	r3, r3, #2
 80005a6:	fa02 f103 	lsl.w	r1, r2, r3
 80005aa:	4a59      	ldr	r2, [pc, #356]	; (8000710 <GPIO_Init+0x31c>)
 80005ac:	7cfb      	ldrb	r3, [r7, #19]
 80005ae:	3302      	adds	r3, #2
 80005b0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3. enable the EXTI interrupt delivery using IMR
		EXTI->IMR |= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b4:	4b57      	ldr	r3, [pc, #348]	; (8000714 <GPIO_Init+0x320>)
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	687a      	ldr	r2, [r7, #4]
 80005ba:	7912      	ldrb	r2, [r2, #4]
 80005bc:	4611      	mov	r1, r2
 80005be:	2201      	movs	r2, #1
 80005c0:	408a      	lsls	r2, r1
 80005c2:	43d2      	mvns	r2, r2
 80005c4:	4611      	mov	r1, r2
 80005c6:	4a53      	ldr	r2, [pc, #332]	; (8000714 <GPIO_Init+0x320>)
 80005c8:	430b      	orrs	r3, r1
 80005ca:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 80005cc:	2300      	movs	r3, #0
 80005ce:	617b      	str	r3, [r7, #20]
	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	799b      	ldrb	r3, [r3, #6]
 80005d4:	461a      	mov	r2, r3
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	791b      	ldrb	r3, [r3, #4]
 80005da:	005b      	lsls	r3, r3, #1
 80005dc:	fa02 f303 	lsl.w	r3, r2, r3
 80005e0:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80005e2:	687b      	ldr	r3, [r7, #4]
 80005e4:	681b      	ldr	r3, [r3, #0]
 80005e6:	689a      	ldr	r2, [r3, #8]
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	791b      	ldrb	r3, [r3, #4]
 80005ec:	4619      	mov	r1, r3
 80005ee:	2303      	movs	r3, #3
 80005f0:	408b      	lsls	r3, r1
 80005f2:	43db      	mvns	r3, r3
 80005f4:	4619      	mov	r1, r3
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	400a      	ands	r2, r1
 80005fc:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	6899      	ldr	r1, [r3, #8]
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	697a      	ldr	r2, [r7, #20]
 800060a:	430a      	orrs	r2, r1
 800060c:	609a      	str	r2, [r3, #8]
	//3. configure the pupd settings
	temp = 0;
 800060e:	2300      	movs	r3, #0
 8000610:	617b      	str	r3, [r7, #20]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	79db      	ldrb	r3, [r3, #7]
 8000616:	461a      	mov	r2, r3
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	791b      	ldrb	r3, [r3, #4]
 800061c:	005b      	lsls	r3, r3, #1
 800061e:	fa02 f303 	lsl.w	r3, r2, r3
 8000622:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	68da      	ldr	r2, [r3, #12]
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	791b      	ldrb	r3, [r3, #4]
 800062e:	4619      	mov	r1, r3
 8000630:	2303      	movs	r3, #3
 8000632:	408b      	lsls	r3, r1
 8000634:	43db      	mvns	r3, r3
 8000636:	4619      	mov	r1, r3
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	400a      	ands	r2, r1
 800063e:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	68d9      	ldr	r1, [r3, #12]
 8000646:	687b      	ldr	r3, [r7, #4]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	697a      	ldr	r2, [r7, #20]
 800064c:	430a      	orrs	r2, r1
 800064e:	60da      	str	r2, [r3, #12]
	temp =0;
 8000650:	2300      	movs	r3, #0
 8000652:	617b      	str	r3, [r7, #20]
	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000654:	687b      	ldr	r3, [r7, #4]
 8000656:	7a1b      	ldrb	r3, [r3, #8]
 8000658:	461a      	mov	r2, r3
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	791b      	ldrb	r3, [r3, #4]
 800065e:	fa02 f303 	lsl.w	r3, r2, r3
 8000662:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000664:	687b      	ldr	r3, [r7, #4]
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	685a      	ldr	r2, [r3, #4]
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	791b      	ldrb	r3, [r3, #4]
 800066e:	4619      	mov	r1, r3
 8000670:	2303      	movs	r3, #3
 8000672:	408b      	lsls	r3, r1
 8000674:	43db      	mvns	r3, r3
 8000676:	4619      	mov	r1, r3
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	681b      	ldr	r3, [r3, #0]
 800067c:	400a      	ands	r2, r1
 800067e:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	6859      	ldr	r1, [r3, #4]
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	697a      	ldr	r2, [r7, #20]
 800068c:	430a      	orrs	r2, r1
 800068e:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000690:	2300      	movs	r3, #0
 8000692:	617b      	str	r3, [r7, #20]

	//5. configure the alt functnlty
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	795b      	ldrb	r3, [r3, #5]
 8000698:	2b02      	cmp	r3, #2
 800069a:	d131      	bne.n	8000700 <GPIO_Init+0x30c>
		{
			uint8_t temp1,temp2;
			temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	791b      	ldrb	r3, [r3, #4]
 80006a0:	08db      	lsrs	r3, r3, #3
 80006a2:	743b      	strb	r3, [r7, #16]
			temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80006a4:	687b      	ldr	r3, [r7, #4]
 80006a6:	791b      	ldrb	r3, [r3, #4]
 80006a8:	f003 0307 	and.w	r3, r3, #7
 80006ac:	73fb      	strb	r3, [r7, #15]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2) );
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	7c3a      	ldrb	r2, [r7, #16]
 80006b4:	3208      	adds	r2, #8
 80006b6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006ba:	7bfb      	ldrb	r3, [r7, #15]
 80006bc:	009b      	lsls	r3, r3, #2
 80006be:	220f      	movs	r2, #15
 80006c0:	fa02 f303 	lsl.w	r3, r2, r3
 80006c4:	43db      	mvns	r3, r3
 80006c6:	4618      	mov	r0, r3
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	681b      	ldr	r3, [r3, #0]
 80006cc:	7c3a      	ldrb	r2, [r7, #16]
 80006ce:	4001      	ands	r1, r0
 80006d0:	3208      	adds	r2, #8
 80006d2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFinMode << (4*temp2));
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	7c3a      	ldrb	r2, [r7, #16]
 80006dc:	3208      	adds	r2, #8
 80006de:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	7a5b      	ldrb	r3, [r3, #9]
 80006e6:	461a      	mov	r2, r3
 80006e8:	7bfb      	ldrb	r3, [r7, #15]
 80006ea:	009b      	lsls	r3, r3, #2
 80006ec:	fa02 f303 	lsl.w	r3, r2, r3
 80006f0:	4618      	mov	r0, r3
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	7c3a      	ldrb	r2, [r7, #16]
 80006f8:	4301      	orrs	r1, r0
 80006fa:	3208      	adds	r2, #8
 80006fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}

}
 8000700:	bf00      	nop
 8000702:	371c      	adds	r7, #28
 8000704:	46bd      	mov	sp, r7
 8000706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800070a:	4770      	bx	lr
 800070c:	40023800 	.word	0x40023800
 8000710:	40013800 	.word	0x40013800
 8000714:	40013c00 	.word	0x40013c00

08000718 <GPIO_ReadFromInputPin>:
  * @Note              -  none

  */

 uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000718:	b480      	push	{r7}
 800071a:	b085      	sub	sp, #20
 800071c:	af00      	add	r7, sp, #0
 800071e:	6078      	str	r0, [r7, #4]
 8000720:	460b      	mov	r3, r1
 8000722:	70fb      	strb	r3, [r7, #3]
	 uint8_t value;
	 value = (uint8_t)((pGPIOx->IDR >> PinNumber) & 0x00000001);
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	691a      	ldr	r2, [r3, #16]
 8000728:	78fb      	ldrb	r3, [r7, #3]
 800072a:	fa22 f303 	lsr.w	r3, r2, r3
 800072e:	b2db      	uxtb	r3, r3
 8000730:	f003 0301 	and.w	r3, r3, #1
 8000734:	73fb      	strb	r3, [r7, #15]
	 return value;
 8000736:	7bfb      	ldrb	r3, [r7, #15]
}
 8000738:	4618      	mov	r0, r3
 800073a:	3714      	adds	r7, #20
 800073c:	46bd      	mov	sp, r7
 800073e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000742:	4770      	bx	lr

08000744 <GPIO_ToggleOutputPin>:
 * @Note              -  none

 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000744:	b480      	push	{r7}
 8000746:	b083      	sub	sp, #12
 8000748:	af00      	add	r7, sp, #0
 800074a:	6078      	str	r0, [r7, #4]
 800074c:	460b      	mov	r3, r1
 800074e:	70fb      	strb	r3, [r7, #3]
pGPIOx->ODR = pGPIOx->ODR^(1<<PinNumber);
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	695b      	ldr	r3, [r3, #20]
 8000754:	78fa      	ldrb	r2, [r7, #3]
 8000756:	2101      	movs	r1, #1
 8000758:	fa01 f202 	lsl.w	r2, r1, r2
 800075c:	405a      	eors	r2, r3
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	615a      	str	r2, [r3, #20]
}
 8000762:	bf00      	nop
 8000764:	370c      	adds	r7, #12
 8000766:	46bd      	mov	sp, r7
 8000768:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076c:	4770      	bx	lr
	...

08000770 <__libc_init_array>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	4e0d      	ldr	r6, [pc, #52]	; (80007a8 <__libc_init_array+0x38>)
 8000774:	4c0d      	ldr	r4, [pc, #52]	; (80007ac <__libc_init_array+0x3c>)
 8000776:	1ba4      	subs	r4, r4, r6
 8000778:	10a4      	asrs	r4, r4, #2
 800077a:	2500      	movs	r5, #0
 800077c:	42a5      	cmp	r5, r4
 800077e:	d109      	bne.n	8000794 <__libc_init_array+0x24>
 8000780:	4e0b      	ldr	r6, [pc, #44]	; (80007b0 <__libc_init_array+0x40>)
 8000782:	4c0c      	ldr	r4, [pc, #48]	; (80007b4 <__libc_init_array+0x44>)
 8000784:	f000 f818 	bl	80007b8 <_init>
 8000788:	1ba4      	subs	r4, r4, r6
 800078a:	10a4      	asrs	r4, r4, #2
 800078c:	2500      	movs	r5, #0
 800078e:	42a5      	cmp	r5, r4
 8000790:	d105      	bne.n	800079e <__libc_init_array+0x2e>
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000798:	4798      	blx	r3
 800079a:	3501      	adds	r5, #1
 800079c:	e7ee      	b.n	800077c <__libc_init_array+0xc>
 800079e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80007a2:	4798      	blx	r3
 80007a4:	3501      	adds	r5, #1
 80007a6:	e7f2      	b.n	800078e <__libc_init_array+0x1e>
 80007a8:	080007d0 	.word	0x080007d0
 80007ac:	080007d0 	.word	0x080007d0
 80007b0:	080007d0 	.word	0x080007d0
 80007b4:	080007d4 	.word	0x080007d4

080007b8 <_init>:
 80007b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ba:	bf00      	nop
 80007bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007be:	bc08      	pop	{r3}
 80007c0:	469e      	mov	lr, r3
 80007c2:	4770      	bx	lr

080007c4 <_fini>:
 80007c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007c6:	bf00      	nop
 80007c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80007ca:	bc08      	pop	{r3}
 80007cc:	469e      	mov	lr, r3
 80007ce:	4770      	bx	lr

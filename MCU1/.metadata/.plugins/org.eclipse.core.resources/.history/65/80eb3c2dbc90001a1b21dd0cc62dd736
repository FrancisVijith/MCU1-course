/*
 * stm32446xx.h
 *
 *  Created on: May 7, 2020
 *      Author: Francis
 */

#ifndef INC_STM32446XX_H_
#define INC_STM32446XX_H_

#include <stdint.h>
#define __vo volatile

//base addresses of FLASH and SRAM memories
#define FLASH_BASEADDR		0x0800 0000U //base address of the flash memory
#define SRAM1_BASEADDR  	0x2000 0000U //base address of SRAM1 112KB
#define SRAM2_BASEADDR		0x2001 C000U //base address of SRAM2 16 KB
#define ROM					0x1FFF 0000U //base address of the system memory
#define OTP_BASEADDR		0x1FFF 7800U //base address of the OTP area
#define SRAM				SRAM1_BASEADDR

//base addresses of AHBx and APBx bus

#define PERIPH_BASE			0x4000 0000U //base address of bus peripheral
#define APB1PERIPH_BASE		0x4000 0000U //base address of APB1 bus domain
#define	APB2PERIPH_BASE		0x4001 0000U //base address of APB2 bus domain
#define	AHB1PERIPH_BASE		0x4002 0000U //base address of AHB1 bus domain
#define AHB2PERIPH_BASE		0x5000 0000U //base address of AHB2 bus domain

//base address of GPIOs hanging to AHB1 bus

#define GPIOA_BASEADDR		0x4002 0000U //base address of GPIOA
#define GPIOB_BASEADDR		0x4002 0400U //base address of GPIOB
#define GPIOC_BASEADDR		0x4002 0800U //base address of GPIOC
#define GPIOD_BASEADDR		0x4002 0C00U //base address of GPIOD
#define GPIOE_BASEADDR		0x4002 1000U //base address of GPIOE
#define GPIOF_BASEADDR		0x4002 1400U //base address of GPIOF
#define GPIOG_BASEADDR		0x4002 1800U //base address of GPIOG
#define GPIOH_BASEADDR		0x4002 1C00U //base address of GPIOH

//base address of peripherals hanging to APB1 bus

#define I2C1_BASEADDR		0x4000 5400U //base address of I2C1
#define I2C2_BASEADDR		0x4000 5800U //base address of I2C2
#define I2C3_BASEADDR		0x4000 5C00U //base address of I2C3
#define SPI2_BASEADDR		0x4000 3800U //base address of SPI2
#define SPI3_BASEADDR		0x4000 3C00U //base address of SPI3
#define USART2_BASEADDR		0x4000 4400U //base address of USART2
#define USART3_BASEADDR		0x4000 4800U //base address of USART3
#define UART4_BASEADDR		0x4000 4C00U //base address of USART4
#define UART5_BASEADDR		0x4000 5000U //base address of USART5

//base address of peripheral hanging to APB2 bus

#define SPI1_BASEADDR		0x4001 3000U //base address of SPI1
#define USART1_BASEADDR		0x4001 1000U //base address of USART1
#define USART6_BASEADDR		0x4001 1400U //base address of USAR6
#define EXT1_BASEDDR		0x4001 3C00U //base address of EXT1
#define SYSCFG_BASEDADDR	0x4001 3800U //base address of SYSCFG

#define GPIOA 		((GPIO_RegDef_t*)GPIOA_BASEADDR)

//*******peripheral register definition structures****************
typedef struct
{
	__vo uint32_t MODER;        //GPIO port mode register Address offset: 0x00
	__vo uint32_t OTYPER;		//GPIO port output type register (GPIOx_OTYPER) (x = A..H) Address offset: 0x04
	__vo uint32_t OSPEEDR;		//GPIO port output speed register (GPIOx_OSPEEDR) (x = A..H) Address offset: 0x08
	__vo uint32_t PUPDR;		//GPIO port pull-up/pull-down register (GPIOx_PUPDR) (x = A..H) Address offset: 0x0C
	__vo uint32_t IDR;			//GPIO port input data register (GPIOx_IDR) (x = A..H) Address offset: 0x10
	__vo uint32_t ODR;			//GPIO port output data register (GPIOx_ODR) (x = A..H) Address offset: 0x14
	__vo uint32_t BSRR;			//GPIO port bit set/reset register (GPIOx_BSRR) (x = A..H) Address offset: 0x18
	__vo uint32_t LCKR;			//GPIO port configuration lock register (GPIOx_LCKR) (x = A..H)Address offset: 0x1C
	__vo uint32_t AFR[2];		//GPIO alternate function low register (GPIOx_AFRL) (x = A..H) 	Address offset: 0x20  GPIO alternate function high register (GPIOx_AFRH) (x = A..H) Address offset: 0x24
}GPIO_RegDef_t;

typedef struct
{
	__vo uint32_t CR;
	__vo uint32_t PLLCFGR;
	__vo uint32_t CFGR;
	__vo uint32_t CIR;
	__vo uint32_t AHB1RSTR;
	__vo uint32_t AHB2RSTR;
	__vo uint32_t AHB3RSTR;
	uint32_t RESERVED0;
	__vo uint32_t APB1RSTR;
	__vo uint32_t APB2RSTR;
	uint32_t RESERVED1[2];
	__vo uint32_t AHB1ENR;
	__vo uint32_t AHB2ENR;
	__vo uint32_t AHB3ENR;
	uint32_t RESERVED2;
	__vo uint32_t APB1ENR;
	__vo uint32_t APB2ENR;
	uint32_t RESERVED3[2];
	__vo uint32_t AHB1LPENR;
	__vo uint32_t	AHB2LPENR;
	__vo uint32_t	AHB3LPENR;
	uint32_t RESERVED4;
	__vo uint32_t	APB1LPENR;
	__vo uint32_t	APB2LPENR;
	uint32_t RESERVED5[2];
	__vo uint32_t	BDCR;
	__vo uint32_t	CSR;
	uint32_t RESERVED6[2];
	__vo uint32_t	SSCGR;
	__vo uint32_t	PLLI2SCFGR;
	__vo uint32_t	PLLSAICFGR;
	__vo uint32_t	DCKCFGR;
	__vo uint32_t	CKGATENR;
	__vo uint32_t	DCKCFGR2;

}RCC_RegDef_t;
};
#endif /* INC_STM32446XX_H_ */

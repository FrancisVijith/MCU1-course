/*
 * stm32f446xx_gpio_driver.c
 *
 *  Created on: May 9, 2020
 *      Author: Admin
 */

#include "stm32f446xx_gpio_driver.h"



/*
 * peripheral clock setup
 */
/*********************************************************************
 * @fn      		  - GPIO_PeriClockControl
 *
 * @brief             - This function enables or disables peripheral clock for the given GPIO port
 *
 * @param[in]         -
 * @param[in]         -
 * @param[in]         -
 *
 * @return            -  none
 *
 * @Note              -  none

 */

void GPIO_PeriClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{

}

/*
 * Initialization
 */
/*********************************************************************
 * @fn      		  - GPIO_Initialization
 *
 * @brief             - This function initializes the GPIO port
 *
 * @param[in]         -
 * @param[in]         - ENABLE or DISABLE macros
 * @param[in]         -
 *
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{

}

/*
 * De-initialization
 */
/*********************************************************************
 * @fn      		  - GPIO_de-initialization
 *
 * @brief             - This function de-initialize the given GPIO port
 *
 * @param[in]         - base address of the gpio peripheral
 * @param[in]         -
 * @param[in]         -
 *
 * @return            -  none
 *
 * @Note              -  none

 */void GPIO_DeInit(GPIO_RegDef_t *pGPIOx)
{

}

 /*
 * read input from GPIOx pin
 */
 /*********************************************************************
  * @fn      		  - GPIO_
  *
  * @brief             - This function reads input from the GPIOx input port
  *
  * @param[in]         - base address of the GPIOx peripheral
  * @param[in]         - pin number of the GPIOx port
  * @param[in]         -
  *
  * @return            -  uint8_t
  *
  * @Note              -  none

  */
 uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{

}

 /*********************************************************************
  * @fn      		  - GPIO_PeriClockControl
  *
  * @brief             - This function enables or disables peripheral clock for the given GPIO port
  *
  * @param[in]         - base address of the gpio peripheral
  * @param[in]         - ENABLE or DISABLE macros
  * @param[in]         -
  *
  * @return            -  none
  *
  * @Note              -  none

  */

uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx)
{

}

/*
 * write output to GPIOx pin
 */

void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{

}

/*
 * write output to GPIOx port
 */

void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value)
{

}

/*
 * Toggle output of GPIOx pin
 */

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{

}

/*
 * IRQ configuration ISR handling
 */

void GPIO_IRQConfig(uint8_t IRQNumber, uint8_t IRQPriority, uint8_t EnorDi)
{

}

/*
 * ISR handling
 *
 */

void GPIO_IRQHandling(uint8_t PinNumber)
{

}



